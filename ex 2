#include <stdio.h>
int maxProduct(int arr[], int n) {
    int max_ending_here = arr[0];
    int min_ending_here = arr[0];
    int max_so_far = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] < 0) {
            int temp = max_ending_here;
            max_ending_here = min_ending_here;
            min_ending_here = temp;
        }
        max_ending_here = (arr[i] > max_ending_here * arr[i]) ? arr[i] : max_ending_here * arr[i];
        min_ending_here = (arr[i] < min_ending_here * arr[i]) ? arr[i] : min_ending_here * arr[i];
        max_so_far = (max_so_far > max_ending_here) ? max_so_far : max_ending_here;
    }
    return max_so_far;
}
int main() {
    int arr[] = {2, 3, -2, 4, -1};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("Maximum Product: %d\n", maxProduct(arr, n));
    return 0;
}
